{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 216564be2417423c6c03","webpack:///./src/utils/assert/assert.ts","webpack:///./src/random/blum-blum-shub.ts","webpack:///./src/dice/dice.ts","webpack:///./src/base/eventable.ts","webpack:///./src/base/object.ts","webpack:///./src/utils/range/range.ts","webpack:///./src/random/randomizer.ts","webpack:///./src/dice/throws/dice-throw.ts","webpack:///./src/dice/throws/dice-throw-result.ts","webpack:///./src/dice/throws/chance-throw-result.ts","webpack:///./src/xethya.ts","webpack:///./node_modules/eventemitter3/index.js","webpack:///./src/utils/assert/assertion-error.ts","webpack:///./src/random/mersenne-twister.ts","webpack:///./src/dice/throws/chance-throw.ts","webpack:///./src/dice/presets/coin-flip.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Xethya\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Xethya\"] = factory();\n\telse\n\t\troot[\"Xethya\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 216564be2417423c6c03","import AssertionError from './assertion-error';\n\nexport default function assert(condition: boolean, message: string) {\n  if (!condition) {\n    throw new AssertionError(message);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/assert/assert.ts","import IRandomAlgorithm from \"./random-algorithm.i\";\n\n/**\n * Default constant value for setting up the BBS PRNG.\n * P must be a prime number.\n *\n * @public\n * @type {Number}\n * @const P\n * @static\n */\nexport const P: number = 87566873;\n\n/**\n * Default constant value for setting up the BBS PRNG.\n * Q must be a prime number.\n *\n * @public\n * @const Q\n * @static\n * @type {Number}\n */\nexport const Q: number = 5631179;\n\n/**\n * A list of default seed values, tested to be evenly distributed.\n\n * @public\n * @const DefaultSeeds\n * @static\n * @type {Array.<Number>}\n * @see  http://wiki.fib.upc.es/sim/index.php/Blum_Blum_Shub#Tests\n */\nexport const DefaultSeeds: number[] = [193945, 740191, 191];\n\nexport type BlumBlumShubAlgorithmSettings = {\n  p?: number,\n  q?: number,\n  seedNumber?: number,\n};\n\n/**\n * Instantiates a Blum Blum Shub PRNG.\n *\n * @public\n * @class BlumBlumShubAlgorithm\n */\nexport class BlumBlumShubAlgorithm implements IRandomAlgorithm {\n  readonly seedNumber: number;\n  M: number;\n  P: number;\n  Q: number;\n  randomIndex: number;\n\n  /**\n   * Initializes the generator.\n   *\n   * @param  {Number} p    A prime value (defaults to P).\n   * @param  {Number} q    A prime value (defaults to Q).\n   * @param  {Number} seedNumber A seed number to feed the generator (defaults to any value\n   *                       in DefaultSeeds).\n   * @constructor\n   */\n  constructor(public settings?: BlumBlumShubAlgorithmSettings) {\n    const defaults = {\n      p: P,\n      q: Q,\n      seedNumber: null,\n    };\n\n    this.settings = Object.assign({}, defaults, settings);\n\n    let seedNumber: number = this.settings.seedNumber as number;\n    const p = this.settings.p as number;\n    const q = this.settings.q as number;\n\n    if (seedNumber) {\n      seedNumber = Math.abs(seedNumber);\n    } else {\n      seedNumber = DefaultSeeds[Math.floor(Math.random() * (DefaultSeeds.length))];\n    }\n\n    this.seedNumber = seedNumber;\n    this.randomIndex = seedNumber;\n    this.M = p * q;\n    this.P = p;\n    this.Q = q;\n  }\n\n  /**\n   * Determines if the generator works better by being reinstantiated after\n   * every generated number.\n   *\n   * @public\n   * @static\n   * @function recommendsToReinstantiate\n   * @memberof BlumBlumShubAlgorithm\n   * @return {Boolean}\n   */\n  static recommendsToReinstantiate() {\n    return true;\n  }\n\n  recommendsToReinstantiate() {\n    return BlumBlumShubAlgorithm.recommendsToReinstantiate();\n  }\n\n  /**\n   * Generates a pseudo-random number and updates the seed for a next roll.\n   * Number is always between 0 and 1.\n   *\n   * @public\n   * @function generateRandom\n   * @memberof BlumBlumShubAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandom() {\n    const r = this.randomIndex * this.randomIndex % this.M;\n    this.randomIndex = r;\n    return Math.abs(r / this.M);\n  }\n\n  /**\n   * Same as `generateRandom()`, but converts the number to an Integer.\n   *\n   * @public\n   * @function generateRandomInteger\n   * @memberof BlumBlumShubAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomInteger() {\n    return Number(this.generateRandom().toString().replace(/\\./, ''));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/random/blum-blum-shub.ts","/**\n * The core class of the package. The Dice class allows to configure a single,\n * positive, integer random throw.\n *\n * By default, the chance throw uses the Blum Blum Shub algorithm contained in\n * `xethya-extension-random-bbs`, which provides a randomizer with an equal chance\n * of rolling numbers in all of the range.\n *\n * You can use the `xethya-extension-random-mtw` package to use the chance throw\n * with the Mersenne-Twister algorithm, which provides an average distribution\n * of 65-35-0 (you'll never get numbers larger than 66).\n *\n * @example\n * ```js\n * // Roll a single d6.\n * const d6 = new Dice();\n * d6.roll(); // A number between 1 and 6.\n *\n * // Roll a single d4.\n * const d4 = new Dice({ faces: 4 });\n * d4.roll();\n *\n * // Alternative, static syntax. Will always use Blum Blum Shub.\n * Dice.rollD(4);\n *\n * // Create a dice, roll it, then change its size.\n * const mutantDice = new Dice({ faces: 10 });\n * mutantDice.roll(); // A number between 1 and 10.\n * mutantDice.faces = 4;\n * mutantDice.roll(); // A number between 1 and 4.\n * ```\n *\n * @class Dice\n * @extends {XethyaObject}\n *\n * @param {Object} settings - A configuration object.\n * @param {Number} [settings.number = 6] - How many faces the dice has, or\n *                 the maximum number the roll can be.\n * @param {Class}  [settings.randomStrategy = BlumBlumShubAlgorithm] - The strategy to use\n *                 to generate the numbers. Must be a class that implements a `generateRandom()`\n *                 method.\n * @param {Object} [settings.randomStrategySettings = {}] - Specific configuration for the\n *                 randomizer. Most strategies should have default settings so you don't need\n *                 to use this, usually.\n *\n * @property {Number} faces - Gets or sets how many faces the dice has. Must be at least 2.\n * @property {Class} randomStrategy - Contains the reference to the pRNG used by the dice.\n * @property {Object} randomStrategySettings - Contains the pRNG's settings.\n *\n * @uses BlumBlumShubAlgorithm\n */\n\nimport Randomizer from '../random/randomizer';\nimport { BlumBlumShubAlgorithm } from '../random/blum-blum-shub';\nimport XethyaObject from '../base/object';\nimport IRandomAlgorithm from '../random/random-algorithm.i';\nimport assert from '../utils/assert/assert';\nimport IConstructableRandomAlgorithm from '../random/constructable-random-algorithm.i';\nimport IConstructable from '../utils/constructable.t';\nimport IRandomSettings from '../random/random-settings.i';\n\nexport interface IDiceSettings extends IRandomSettings {\n  faces: number,\n}\n\nexport class Dice extends XethyaObject {\n  private _faces: number = 6;\n  private _mustPreservePrng: boolean;\n  private _randomStrategy?: IRandomAlgorithm;\n  private _randomizer?: IRandomAlgorithm;\n  private _randomStrategySettings?: object;\n\n  constructor({\n    faces = 6,\n    randomStrategy = BlumBlumShubAlgorithm,\n    randomStrategySettings = {}\n  } = {} as IDiceSettings) {\n    super();\n\n    this.faces = faces;\n    this.setRandomStrategy(randomStrategy as IRandomAlgorithm, randomStrategySettings);\n    this._mustPreservePrng = randomStrategy.recommendsToReinstantiate();\n  }\n\n  /**\n   * Reinitializes the randomizer according to the strategy's recommendation.\n   *\n   * @private\n   * @method _regenerateRandomStrategyIfNeeded\n   */\n  _regenerateRandomStrategyIfNeeded() {\n    if (!this._mustPreservePrng) {\n      this._initializeRandomizer();\n    }\n  }\n\n  /**\n   * Instantiates the randomizer.\n   *\n   * @private\n   * @method _initializeRandomizer\n   */\n  private _initializeRandomizer() {\n    this._randomizer = new Randomizer(this.randomStrategy as IConstructableRandomAlgorithm<IRandomAlgorithm>).create(<object>this.randomStrategySettings);\n  }\n\n  roll(): number {\n    this.emit('before:roll');\n\n    const random: number = (<IRandomAlgorithm>this._randomizer).generateRandom();\n    const result: number = Math.ceil(random * this.faces);\n    this._regenerateRandomStrategyIfNeeded();\n\n    this.emit('roll', result);\n\n    return result;\n  }\n\n  /**\n   * Sets a new random strategy for the dice.\n   *\n   * @public\n   * @method\n   * @param {Class}  randomStrategy - The strategy to use to generate the numbers.\n   *                 Must be a class that implements a `generateRandom()` method.\n   * @param {Object} [randomStrategySettings = {}] - Specific configuration for the\n   *                 randomizer. Most strategies should have default settings so you don't need\n   *                 to use this, usually.\n   */\n  setRandomStrategy(randomStrategy: IRandomAlgorithm, randomStrategySettings = {}) {\n    this.randomStrategy = randomStrategy;\n    this.randomStrategySettings = randomStrategySettings;\n\n    this._initializeRandomizer();\n  }\n\n  get faces() {\n    return this._faces;\n  }\n\n  /**\n   * @throws {Error} if faces isn't a Number or it's less than 2.\n   */\n  set faces(faces) {\n    assert(faces >= 2, 'Dice#setFaces: a dice must have at least two faces');\n\n    this._faces = faces;\n  }\n\n  get randomStrategy() {\n    return this._randomStrategy;\n  }\n\n  set randomStrategy(randomStrategy) {\n    this._randomStrategy = randomStrategy;\n  }\n\n  get randomStrategySettings() {\n    return this._randomStrategySettings;\n  }\n\n  set randomStrategySettings(randomStrategySettings) {\n    this._randomStrategySettings = randomStrategySettings;\n  }\n\n  static rollD(faces: number) {\n    return new Dice({ faces }).roll();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice/dice.ts","import { EventEmitter } from 'eventemitter3';\n\nexport default class Eventable extends EventEmitter {\n  constructor() {\n    super();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/base/eventable.ts","import Eventable from './eventable';\n\nclass XethyaObject extends Eventable {\n  constructor() {\n    super();\n  }\n}\n\nexport default XethyaObject;\n\n\n// WEBPACK FOOTER //\n// ./src/base/object.ts","import assert from '../assert/assert';\n\nexport default class Range {\n  lowerBound: number;\n  upperBound: number;\n\n  constructor(lowerBound: number, upperBound: number) {\n    assert(lowerBound !== upperBound, 'Range#constructor: lowerBound and upperBound cannot be equal');\n    \n    this.lowerBound = Math.min(lowerBound, upperBound);\n    this.upperBound = Math.max(lowerBound, upperBound);    \n  }\n\n  /**\n   * Checks if a value is in the defined range.\n   *\n   * @public\n   * @function\n   * @param  {Number} value - Value to compare.\n   * @return {Boolean} true if in range, false otherwise.\n   */\n  includes(value: number): boolean {\n    return this.lowerBound <= value && value <= this.upperBound;\n  }  \n\n  /**\n   * Converts the Range object to a string representation.\n   * \n   * @public\n   * @function\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.lowerBound.toString()} ~ ${this.upperBound.toString()}`;\n  }\n\n  /**\n   * Creates a Range from an array of two numbers.\n   *\n   * @public\n   * @static\n   * @function\n   * @param  {Array.<Number>} values - Boundaries of the range.\n   * @return {Range}\n   */\n  static fromArray(values: number[]): Range {\n    const errorMessage = 'Range#fromArray: values must be an Array of 2 numerical elements';\n\n    assert(values.length === 2, errorMessage);\n\n    return new Range(values[0], values[1]);\n  }\n\n  /**\n   * Creates a Range from a string-based notation.\n   *\n   * @public\n   * @static\n   * @function\n   * @param  {String} notedRange - A string representation of a Range,\n   *                  using delimiters. Accepted formats: x,y x;y x:y x~y.\n   * @return {Range}\n   */\n  static fromNotation(notedRange: string): Range | undefined {\n    const errorMessage = 'Range#fromNotation: notedRange must use one of these formats: x,y x;y x:y x~y';\n\n    assert(notedRange !== undefined, errorMessage);\n    assert(typeof notedRange === 'string', errorMessage);\n\n    let range: Range | undefined;\n    const allowedDelimiters: string[] = [',', ';', ':', '~'];\n\n    assert(allowedDelimiters.some(delimiter => notedRange.includes(delimiter)), errorMessage);\n\n    let delimiterFound = false;\n\n    while (!delimiterFound) {\n      const delimiter: string = allowedDelimiters.shift() as string;\n\n      delimiterFound = notedRange.includes(delimiter);\n\n      if (delimiterFound) {\n        const data = notedRange.split(delimiter).map(d => d.trim());\n\n        assert(data.length === 2, errorMessage);\n\n        range = Range.fromArray(data.map(d => Number(d)));\n      }\n    }\n\n    return range;\n  }  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/range/range.ts","import IConstructableRandomAlgorithm from './constructable-random-algorithm.i';\n\nexport default class Randomizer<Algorithm> {\n  constructor(private constructorFunction: IConstructableRandomAlgorithm<Algorithm>) {}\n  \n  create(randomizerSettings: object): Algorithm {\n    return new this.constructorFunction(randomizerSettings);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/random/randomizer.ts","/**\n * xethya-dice\n *\n * Copyright © 2016 Joel A. Villarreal Bertoldi. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\nimport { Dice } from '../dice';\nimport DiceThrowResult from './dice-throw-result';\n\nimport { BlumBlumShubAlgorithm } from '../../random/blum-blum-shub';\nimport assert from '../../utils/assert/assert';\nimport IRandomSettings from '../../random/random-settings.i';\nimport IRandomAlgorithm from '../../random/random-algorithm.i';\nimport IConstructableRandomAlgorithm from '../../random/constructable-random-algorithm.i';\n\nexport interface IDiceThrowSettings extends IRandomSettings {\n  numberOfDices?: number,\n  maxNumber?: number,\n}\n\nexport const enum DiceThrowTypes {\n  FAILURE = 'failure',\n  SUCCESS = 'success',\n  CRITICAL_SUCCESS = 'criticalSuccess',\n};\n\nexport class DiceThrow {\n  dices: Dice[];\n\n  constructor({\n    numberOfDices = 2,\n    maxNumber = 6,\n    randomStrategy = BlumBlumShubAlgorithm,\n    randomStrategySettings = {}\n  } = {} as IDiceThrowSettings) {\n    assert(maxNumber >= 2, 'DiceThrow#constructor: expected `maxNumber` to be at least 2.');\n\n    this.dices = [];\n\n    for (let d = 0; d < numberOfDices; d += 1) {\n      this.dices.push(new Dice({\n        faces: maxNumber,\n        randomStrategy: randomStrategy as IConstructableRandomAlgorithm<IRandomAlgorithm>,\n        randomStrategySettings\n      }));\n    }\n  }\n\n  roll() {\n    let dtr = new DiceThrowResult();\n    dtr.rolls = this.dices.map(d => d.roll());\n    return dtr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice/throws/dice-throw.ts","export default class DiceThrowResult {\n  rolls: number[];\n\n  constructor() {\n    this.rolls = [];\n  }\n\n  getRollSum(): number {\n    return this.rolls.reduce((m, n) => m + n);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice/throws/dice-throw-result.ts","import DiceThrowResult from './dice-throw-result';\nimport { DiceThrowTypes } from './dice-throw';\n\nconst allowedThrowTypes = [\n  DiceThrowTypes.FAILURE,\n  DiceThrowTypes.SUCCESS,\n  DiceThrowTypes.CRITICAL_SUCCESS\n];\n\nexport default class ChanceThrowResult extends DiceThrowResult {\n  private _throwType?: DiceThrowTypes;\n\n  constructor(throwResult: DiceThrowResult) {\n    super();\n    this.rolls = this.rolls.concat(throwResult.rolls);\n  }\n\n  get throwType() {\n    return this._throwType;\n  }\n\n  set throwType(value) {\n    this._throwType = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice/throws/chance-throw-result.ts","import Eventable from './base/eventable';\nimport XethyaObject from './base/object';\n\n// ----------------------------------------------------------------------------\n\n/**\n * @package Base\n */\nexport {\n  Eventable,\n  XethyaObject,\n};\n\n// ----------------------------------------------------------------------------\n\n/**\n * @package Utils\n */\nimport assert from './utils/assert/assert';\nimport Range from './utils/range/range';\nimport IRangeable from './utils/range/rangeable.i';\nimport Constructable from './utils/constructable.t';\n\nexport {\n  assert,\n  Range,\n  IRangeable,\n  Constructable,\n} \n\n// ----------------------------------------------------------------------------\n\n/**\n * @package Random\n */ \n\nimport * as BlumBlumShub from './random/blum-blum-shub';\nimport * as MersenneTwister from './random/mersenne-twister';\nimport IConstructableRandomAlgorithm from './random/constructable-random-algorithm.i';\nimport IRandomAlgorithm from './random/random-algorithm.i';\nimport IRandomSettings from './random/random-settings.i';\nimport Randomizer from './random/randomizer';\n\nexport {\n  BlumBlumShub,\n  MersenneTwister,\n\n  Randomizer,\n  IRandomAlgorithm,\n  IRandomSettings,\n  IConstructableRandomAlgorithm,\n};\n\n// ----------------------------------------------------------------------------\n\n/**\n * @package Dice\n */\n\nimport { Dice, IDiceSettings } from './dice/dice';\n\nimport { IDiceThrowSettings, DiceThrowTypes, DiceThrow } from './dice/throws/dice-throw';\nimport DiceThrowResult from './dice/throws/dice-throw-result';\nimport { IChanceThrowSettings, ChanceThrow } from './dice/throws/chance-throw';\nimport ChanceThrowResult from './dice/throws/chance-throw-result';\nimport IRollScoreSettings from './dice/throws/roll-score-settings.i';\n\nimport { CoinFlip, CoinFlipSides } from './dice/presets/coin-flip';\n\nexport {\n  Dice,\n  IDiceSettings,\n\n  IDiceThrowSettings,\n  DiceThrowTypes,\n  DiceThrow,\n  IChanceThrowSettings,\n  ChanceThrow,\n  ChanceThrowResult,\n  IRollScoreSettings,\n\n  CoinFlipSides,\n  CoinFlip,\n}\n\n// ----------------------------------------------------------------------------\n\n\n\n// WEBPACK FOOTER //\n// ./src/xethya.ts","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eventemitter3/index.js\n// module id = 11\n// module chunks = 0","export default class AssertionError extends Error {\n  constructor(message: string) {\n    super();\n    this.message = `[AssertionError] An assertion has failed${message ? (': ' + message) : ''}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/assert/assertion-error.ts","import IRandomAlgorithm from \"./random-algorithm.i\";\nimport assert from '../utils/assert/assert';\n\n/**\n * @ignore\n */\nexport const N: number = 624;\n\n/**\n * @ignore\n */\nexport const M: number = 397;\n\n/**\n * @ignore\n */\nexport const MATRIX_A: number = 0x9908b0df;\n\n/**\n * @ignore\n */\nexport const UPPER_MASK: number = 0x80000000;\n\n/**\n * @ignore\n */\nexport const LOWER_MASK: number = 0x7fffffff;\n\n/**\n * @ignore\n */\nexport const INIT_BY_ARRAY_SEED: number = 19650218;\n\nexport type MersenneTwisterAlgorithmSettings = {\n  seedNumber?: number,\n};\n\nexport class MersenneTwisterAlgorithm implements IRandomAlgorithm {\n  seedNumber: number;\n  MT: number[];\n  MTI: number;\n\n  /**\n   * Instantiates the Mersenne-Twister generator.\n   *\n   * @param  {Object} settings - Configuration for the generator:\n   *         - seedNumber: The number for the seed.\n   */\n  constructor(public settings?: MersenneTwisterAlgorithmSettings) {\n    let seedNumber;\n\n    const defaults = {\n      seedNumber: undefined,\n    };\n\n    this.settings = Object.assign({}, defaults, settings);\n\n    const seed: number = this.settings.seedNumber as number;\n\n    if (seed) {\n      seedNumber = Math.abs(seed);\n    } else {\n      // Try seeding with a custom algorithm.\n      seedNumber = Number(new Date().getTime().toString().split('')\n        .sort(() => 0.5 - Math.random()).join(''));\n    }\n\n    this.MT = new Array(N);\n    this.MTI = N + 1;\n    this.seedNumber = seedNumber;\n\n    this.initializeRandomGenerator(seedNumber);\n  }\n\n  /**\n   * Determines if the generator works better by being reinstantiated after\n   * every generated number.\n   *\n   * @public\n   * @function recommendsToReinstantiate\n   * @memberof MersenneTwisterAlgorithm\n   * @static\n   * @return {Boolean}\n   */\n  static recommendsToReinstantiate() {\n    return false;\n  }\n\n  recommendsToReinstantiate() {\n    return MersenneTwisterAlgorithm.recommendsToReinstantiate();\n  }\n\n  /**\n   * Loads the initialization vector required for the algorithm,\n   * according to a given seed.\n   *\n   * @public\n   * @method initializeRandomGenerator\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @param  {Number} seedNumber - A seed can be any non-negative integer value.\n   */\n  initializeRandomGenerator(seedNumber: number) {\n    let seed = Math.abs(Math.floor(seedNumber));\n\n    this.MT[0] = seed >> 0;\n    for (this.MTI = 1; this.MTI < N; this.MTI += 1) {\n      seed = this.MT[this.MTI - 1] ^ (this.MT[this.MTI - 1] >> 30);\n      this.MT[this.MTI] = ((((seed & 0xffff0000) >> 16) * 1812433253) << 16)\n                        + ((seed & 0x0000ffff) * 1812433253)\n                        + this.MTI;\n      this.MT[this.MTI] = this.MT[this.MTI] >> 0;\n    }\n  }\n\n  /**\n   * An alternative way to load the initialization vector for the algorithm.\n   *\n   * @public\n   * @method initializeByArray\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @param  {Array.<Number>} initKeyArray - A list of non-negative integer values.\n   */\n  initializeByArray(initKeyArray: number[]) {\n    let i = 1;\n    let j = 0;\n    const keyLength = initKeyArray.length;\n\n    assert(keyLength > 0, 'MersenneTwister#initializeByArray: initKeyArray must be an Array of at least one non-negative number.');\n\n    // Ensure positive, integer values.\n    const initKey = initKeyArray.map(v => Math.abs(Math.floor(v)));\n\n    this.initializeRandomGenerator(INIT_BY_ARRAY_SEED);\n\n    let k = N > keyLength ? N : keyLength;\n\n    while (k > 0) {\n      const s = this.MT[i - 1] ^ (this.MT[i - 1] >> 30);\n      this.MT[i] = (this.MT[i] ^ (((((s & 0xffff0000) >> 16) * 1664525) << 16)\n        + ((s & 0x0000ffff) * 1664525)))\n        + initKey[j] + j;\n      this.MT[i] = this.MT[i] >> 0;\n      i += 1;\n      j += 1;\n      if (i >= N) {\n        this.MT[0] = this.MT[N - 1];\n        i = 1;\n      }\n      if (j >= keyLength) {\n        j = 0;\n      }\n      k -= 1;\n    }\n    for (k = N - 1; k > 0; k -= 1) {\n      const s = this.MT[i - 1] ^ (this.MT[i - 1] >> 30);\n      this.MT[i] = (this.MT[i] ^ (((((s & 0xffff0000) >> 16) * 1566083941) << 16)\n        + ((s & 0x0000ffff) * 1566083941))) - i;\n      this.MT[i] = this.MT[i] >> 0;\n      i += 1;\n      if (i >= N) {\n        this.MT[0] = this.MT[N - 1];\n        i = 1;\n      }\n    }\n    this.MT[0] = 0x80000000;\n  }\n\n  /**\n   * Returns a random non-negative integer value.\n   *\n   * @public\n   * @function generateRandomInteger\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomInteger() {\n    let y;\n    const mag01 = [0x0, MATRIX_A];\n\n    if (this.MTI >= N) {\n      let kk;\n      if (this.MTI === N + 1) {\n        this.initializeRandomGenerator(5489);\n      }\n      for (kk = 0; kk < N - M; kk += 1) {\n        y = (this.MT[kk] & UPPER_MASK) | (this.MT[kk + 1] & LOWER_MASK);\n        this.MT[kk] = this.MT[kk + M] ^ (y >> 1) ^ mag01[y & 0x1];\n      }\n      while (kk < N - 1) {\n        y = (this.MT[kk] & UPPER_MASK) | (this.MT[kk + 1] & LOWER_MASK);\n        this.MT[kk] = this.MT[kk + M - N] ^ (y >> 1) ^ mag01[y & 0x1];\n        kk += 1;\n      }\n      y = (this.MT[N - 1] & UPPER_MASK) | (this.MT[0] & LOWER_MASK);\n      this.MT[N - 1] = this.MT[M - 1] ^ (y >> 1) ^ mag01[y & 0x1];\n\n      this.MTI = 0;\n    }\n\n    this.MTI += 1;\n    y = this.MT[this.MTI];\n\n    y ^= (y >> 11);\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= (y >> 18);\n\n    return y >> 0;\n  }\n\n  /**\n   * Returns a non-negative random integer value, within\n   * the range of Int31.\n   *\n   * @public\n   * @function generateRandomInteger31\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomInteger31() {\n    return this.generateRandomInteger() >> 1;\n  }\n\n  /**\n   * Returns a non-negative random real number between 0 and 1.\n   *\n   * @public\n   * @function generateRandomReal\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomReal() {\n    return this.generateRandomInteger() * (1.0 / 4294967295.0);\n  }\n\n  /**\n   * Returns a non-negative random number between 0 and 1.\n   *\n   * @public\n   * @function generateRandom\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandom() {\n    return this.generateRandomInteger() * (1.0 / 4294967296.0);\n  }\n\n  /**\n   * Returns a non-negative random real number between 0 and 1.\n   *\n   * @public\n   * @function generateRandomReal3\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomReal3() {\n    return (this.generateRandomInteger() + 0.5) * (1.0 / 4294967296.0);\n  }\n\n  /**\n   * Returns a non-negative random rumber with a resolution\n   * of 53 bits.\n   *\n   * @public\n   * @function generateRandomReal53BitResolution\n   * @memberof MersenneTwisterAlgorithm\n   * @instance\n   * @return {Number}\n   */\n  generateRandomReal53BitResolution() {\n    const a = this.generateRandomInteger() >> 5;\n    const b = this.generateRandomInteger() >> 6;\n    return (a * 671084464.0 + b) * (1.0 / 9007199254740992.0);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/random/mersenne-twister.ts","/**\n * A d100 thrower. Useful for probability calculation. A throw is classified\n * with a roll score map, where the defaults are:\n *\n * - 1-20: Failure\n * - 21-90: Success\n * - 91-100: Critical success\n *\n * You can move around these ranges in order to change the roll's difficulty.\n * For instance, a very difficult throw would be one like this:\n *\n * - 1-80: Failure\n * - 81-98: Success\n * - 99-100: Critical success\n *\n * Notice that the success rate ranges cannot overlap, as the result resolver\n * won't be able to distinguish between rates otherwise.\n *\n * As ChanceThrow is an extension of Dice, it's regulated by the same randomizer\n * rules.\n *\n * @example\n * ```js\n * // Default settings.\n * const d100 = new ChanceThrow();\n * d100.roll();\n *\n * // A very difficult throw.\n * const d100Hard = new ChanceThrow({\n *   rollScores: {\n *     failure: new Range(1, 80),\n *     success: new Range(81, 98),\n *     criticalSuccess: new Range(99, 100),\n *   }\n * });\n * d100Hard.roll();\n *\n * // A chance throw of d66. Useful for capping the success rate\n * // without changing the roll scores map.\n * import { MersenneTwisterAlgorithm } from 'xethya-extension-random-mtw';\n *\n * const d66 = new ChanceThrow({\n *   randomStrategy: MersenneTwisterAlgorithm,\n * });\n * d66.roll();\n * ```\n *\n * @class ChanceThrow\n * @extends DiceThrow\n *\n * @param {Object} [settings] - Configuration object for the throw.\n * @param {Object} [settings.rollScores] - A map of ranges to determine the success rate of\n *                 the chance throw's result.\n * @param {Range}  [settings.rollScores.failure = new Range(1, 20)] - A Range to describe a\n *                 failed throw. This range can be used to apply penalizations to the player.\n * @param {Range}  [settings.rollScores.success = new Range(21, 90)] - A Range to describe a\n *                 success throw. This range can be used to give the player a reward.\n * @param {Range}  [settings.rollScores.criticalSuccess = new Range(91, 100)] - A Range to\n *                 describe a critical success throw. This result means the throw went even\n *                 better than normal, so a major reward can be given.\n * @param {Class}  [settings.randomStrategy = BlumBlumShubAlgorithm] - The strategy to use\n *                 to generate the numbers. Must be a class that implements a `generateRandom()`\n *                 method.\n *\n * @see https://github.com/xethya/xethya-extension-random-bbs/wiki/Blum-Blum-Shub-distributions\n * @see https://github.com/xethya/xethya-extension-random-mtw\n *\n * @uses Range\n * @uses BlumBlumShubAlgorithm\n * @uses ChanceThrowResult\n */\n\nimport Range from '../../utils/range/range';\nimport { BlumBlumShubAlgorithm } from '../../random/blum-blum-shub';\n\nimport { DiceThrow, IDiceThrowSettings, DiceThrowTypes } from './dice-throw';\nimport ChanceThrowResult from './chance-throw-result';\nimport IConstructableRandomAlgorithm from '../../random/constructable-random-algorithm.i';\nimport IRandomSettings from '../../random/random-settings.i';\nimport IRollScoreSettings from './roll-score-settings.i';\nimport assert from '../../utils/assert/assert';\n\nexport interface IChanceThrowSettings extends IDiceThrowSettings {\n  rollScores: IRollScoreSettings,\n}\n\nexport class ChanceThrow extends DiceThrow {\n  settings: IChanceThrowSettings;\n\n  constructor(settings = { randomStrategy: undefined } as IChanceThrowSettings) {\n    super({\n      numberOfDices: 1,\n      maxNumber: 100,\n      randomStrategy: settings.randomStrategy || BlumBlumShubAlgorithm as IConstructableRandomAlgorithm<BlumBlumShubAlgorithm>,\n      randomStrategySettings: {\n        seedNumber: Number(Math.random().toString().replace(/\\./, ''))\n      }\n    });\n\n    const defaults = {\n      rollScores: {\n        failure: new Range(1, 20),\n        success: new Range(21, 90),\n        criticalSuccess: new Range(91, 100)\n      }\n    };\n\n    this.settings = <IChanceThrowSettings>Object.assign({}, settings, defaults);\n  }\n\n  /**\n   * Returns the range for a success rate.\n   *\n   * @private\n   * @function\n   * @param {string} key - The success rate to lookup.\n   * @return {Range}\n   */\n  private _range(key: string) {\n    return this.settings.rollScores[key];\n  }\n\n  /**\n   * Determines the success rate of the throw.\n   *\n   * @private\n   * @function\n   * @param {Number} rollSum - The results of the throw.\n   * @return {String}\n   */\n  private _calculateThrowType(rollSum: number): DiceThrowTypes | undefined {\n    for (let throwType of Object.keys(this.settings.rollScores)) {\n      if (this._range(throwType).includes(rollSum)) {\n        return throwType as DiceThrowTypes;\n      }\n    }\n  }\n\n  /**\n   * Rolls the dice.\n   *\n   * @public\n   * @function roll\n   * @override\n   */\n  roll() {\n    const diceThrow = super.roll();\n    const ctr = new ChanceThrowResult(diceThrow);\n    const rollSum = diceThrow.getRollSum();\n\n    ctr.throwType = this._calculateThrowType(rollSum);\n\n    return ctr;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice/throws/chance-throw.ts","import { Dice } from '../dice';\n\nexport const enum CoinFlipSides {\n  HEADS = 1,\n  TAILS = 2,\n};\n\nexport class CoinFlip extends Dice {\n  constructor() {\n    super({ faces: 2 });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dice/presets/coin-flip.ts"],"sourceRoot":""}